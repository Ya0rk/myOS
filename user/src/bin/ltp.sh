#!/bin/sh

echo "#### OS COMP TEST GROUP START ltp-musl ####"

# Define target directory
target_dir="/musl/ltp/testcases/bin"

backip="
abs01
accept01
accept02
accept03
accept04
accept4_01
add_key01
add_key02
add_key03
add_key04
add_key05
alarm02
alarm03
alarm05
alarm06
alarm07
asapi_01
atof01
bind01
bind02
brk01
capget01
chmod01
chmod03
chmod05
chown01
chown02
chown03
chown05
chroot02
chroot03
clock_getres01
clock_gettime02
clock_nanosleep04
close01
close_range02
connect01
creat01
clone01
clone02
clone03
clone06
clone07
clone08
dma_thread_diotest
dirtypipe
dup01
dup02
dup03
dup04
dup07
dup202
dup203
dup204
dup207
dup3_01
dup3_02
exit01
exit02
faccessat01
faccessat201
fchdir01
fchdir02
fchown01
fchown02
fchown05
fcntl01
fcntl01_64
fcntl02
fcntl02_64
fcntl03
fcntl03_64
fcntl04
fcntl04_64
fcntl05
fcntl05_64
fcntl07
fcntl07_64
fcntl08
fcntl08_64
fcntl09
fcntl09_64
fcntl10
fcntl10_64
fcntl13
fcntl13_64
fcntl25
fcntl25_64
fcntl26
fcntl26_64
fcntl27
fcntl27_64
fcntl29
fcntl29_64
fcntl30
fcntl30_64
fcntl31
fcntl31_64
fcntl32
fcntl32_64
fcntl33
fcntl33_64
fcntl34
fcntl34_64
fork01
fork03
fork04
fork05
fork07
fork08
fork10
fork13
fstat02
fstat02_64
fstat03
fstat03_64
fstatat01
fstatfs01
fstatfs01_64
fstatfs02
fstatfs02_64
getcwd01
getcwd02
getcwd03
getcwd04
getdomainname01
getgid01
gethostname01
getitimer01
getitimer02
getpeername01
getpgid01
getpid02
getsockname01
getsockopt01
keyctl02
keyctl03
keyctl04
keyctl05
keyctl06
keyctl07
keyctl08
keyctl09
lseek01
lseek02
lseek07
lseek11
llseek01
llseek02
llseek03
lstat01
lstat01_64
lstat02
lstat02_64
mkdir02
mkdir03
mkdir04
mkdir05
mkdir09
mkdirat01
mkdirat02
mknod01
mknod02
mknod03
mknod04
mknod05
mknod06
mknod07
mknod08
mknod09
mknodat01
mknodat02
mq_open01
mmap01
mmap02
mmap04
mmap06
mmap08
mmap09
mmap19
mmap2
mmap20
mem_process
memcg_process
memcg_process_stress
nfs01_open_files
nextafter01
open01
open02
open03
open06
open07
open09
open10
open11
open12
open12_child
open13
open14
open_by_handle_at01
open_by_handle_at02
openat01
openat02
openat02_child
openat03
openat04
openat202
openat203
pidfd_open01
pidfd_open02
pidfd_open03
pidfd_open04
pipe01
pipe02
pipe04
pipe05
pipe06
pipe07
pipe08
pipe09
pipe10
pipe11
pipe12
pipe13
pipe14
pipe15
pipe2_01
pipe2_02
pipe2_02_child
pipe2_04
pipeio
pread01
pread01_64
pread02
pread02_64
preadv01
preadv01_64
preadv02
preadv02_64
preadv201
preadv201_64
preadv202
preadv202_64
preadv203
preadv203_64
process_madvise01
process_vm01
process_vm_readv02
process_vm_readv03
process_vm_writev02
pwrite01
pwrite01_64
pwrite02
pwrite02_64
pwrite03
pwrite03_64
pwrite04
pwrite04_64
pwritev01
pwritev01_64
pwritev02
pwritev02_64
pwritev03
pwritev03_64
pwritev201
pwritev201_64
pwritev202
pwritev202_64
read01
read02
read03
read04
read_all
readahead01
readahead02
readdir01
readdir21
readv01
recvmsg02
request_key01
request_key02
request_key04
request_key05
rmdir01
rmdir02
rmdir03
rt_sigaction01
sbrk01
sbrk02
semctl07
semget01
setdomainname01
setdomainname02
setfsuid02
setgid01
setgroups01
setgroups02
sethostname01
sethostname02
setpgid01
setpgid02
setpgrp01
setregid01
setregid04
setreuid01
setrlimit01
setrlimit02
setrlimit03
setrlimit04
setsid01
setsockopt01
setsockopt03
setsockopt04
settimeofday02
setuid01
setxattr02
shmat1
shmctl01
shmctl02
shmctl03
shmctl04
shmctl06
shmctl07
shmctl08
shmdt01
shmdt02
shmem_2nstest
shmget02
shmget03
shmget04
shmget05
shmget06
shmnstest
shmt02
shmt03
signal01
signal02
signal03
signal04
signal05
sigaction01
sigaction02
sigaltstack01
sigaltstack02
sigwait01
socket02
socketpair01
socketpair02
splice01
splice03
splice07
stack_space
stat01
stat01_64
stat02
stat02_64
statfs01
statfs01_64
statfs02
statfs02_64
statfs03
statfs03_64
statvfs01
statvfs02
statx01
statx02
statx04
statx05
statx06
statx07
statx08
statx09
statx10
statx11
statx12
stream01
stream02
stream03
stream04
stream05
string01
sync_file_range01
syscall01
sysconf01
sysinfo01
sysinfo02
test_1_to_1_accept_close
ustat01
ustat02
wait01
wait02
wait401
wait402
wait403
waitid01
waitid02
waitid03
waitid04
waitid05
waitid06
waitid07
waitid08
waitid09
waitid10
waitid11
waitpid01
waitpid04
waitpid06
waitpid07
waitpid08
waitpid09
waitpid10
waitpid11
write01
write02
"

# List of test cases (no array, using space-separated string)
# you can add prog you want to test.if it succeed, you can put it in var backip.
# from jdlu
ltp_cases="
mem_process
"


for case in $backip; do
  file="$target_dir/$case"

  if [ -f "$file" ]; then
    echo "RUN LTP CASE $case"

    "$file"
    ret=$?

    echo "FAIL LTP CASE $case : $ret"
    #   else
    #     echo "SKIP LTP CASE $case : not found"
  fi
done

echo "#### OS COMP TEST GROUP END ltp-musl ####"